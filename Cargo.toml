# format:
#
# package
# dependencies
# features
# profiles
# examples

[package]
name = "libquark"
version = "4.1.0"
description = "Develop lightweight, fast desktop applications with Quark."
authors = ["Jaydon Nelson <xxdr@duck.com>"]
license = "MIT"
readme = "README_crates.md"
repository = "https://codeberg.org/pparaxan/Quark"
edition = "2021"
keywords = [ "web", "gui", "desktop" ]
categories = [ "gui", "web-programming" ]

[package.metadata.bundle]
name = "quark"
identifier = "com.xan.quark"
icon = ["assets/bundle_images/icon*.png"]
category = "DeveloperTool"
short_description = "An example of a bundled application"
long_description = "A trivial application that just displays a blank window with a title bar. It serves as an example of an application that can be bundled with cargo-bundle, as well as a test-case for cargo-bundle's support for bundling crate examples."

[dependencies]
include_dir = "0.7.4"
tiny_http = "0.12.0"

# dependencies - [quark]bundle
cargo_metadata = { version = "0.19.1", optional = true }
error-chain = { version = "0.12.4", optional = true }
glob = { version = "0.3.2", optional = true }
image = { version = "0.12", optional = true }
serde = { version = "1.0.217", optional = true }
serde_json = { version = "1.0.134", optional = true }
strsim = { version = "0.11.1", optional = true }
toml = { version = "0.8.19", optional = true }
walkdir = { version = "2.5.0", optional = true }
# |
[target.'cfg(target_os = "linux")'.dependencies]
libflate = { version = "2.1.0", optional = true }
md5 = { version = "0.7.0", optional = true }
tar = { version = "0.4.43", optional = true }
ar = { version = "0.9.0", optional = true }
# |
[target.'cfg(any(target_os = "linux", target_os = "macos"))'.dependencies]
icns = { version = "0.3.1", optional = true }
# |
[target.'cfg(target_os = "macos")'.dependencies]
icns = { version = "0.3.1", optional = true }
chrono = { version = "0.4.39", optional = true }
dirs = { version = "5.0.1", optional = true }
# |
[target.'cfg(target_os = "windows")'.dependencies]
msi = { version = "0.8.0", optional = true }
uuid = { version = "1.11.0", features = ["v5"], optional = true }
cab = { version = "0.6.0", optional = true }

[features]
bundle = [
    "ar",
    "cab",
    "cargo_metadata",
    "chrono",
    "dirs",
    "error-chain",
    "glob",
    "icns",
    "image",
    "libflate",
    "md5",
    "msi",
    "serde",
    "serde_json",
    "strsim",
    "tar",
    "toml",
    "uuid",
    "walkdir"
]

[build-dependencies]
cc = "1.2.3"
pkg-config = "0.3.31"

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
incremental = false
opt-level = "s"
strip = true

[[example]]
name = "helloworld"
path = "examples/helloworld.rs"
